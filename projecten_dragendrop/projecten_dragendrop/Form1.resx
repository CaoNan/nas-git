<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="nyIcon.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pbcApp.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAQAAAAEACAYAAABccqhmAAAABGdBTUEAALGPC/xhBQAAEZlJREFUeF7t
        nX2sJWddx295aalG3iyWhIIFF6OULXvnmbvXK2pWBeJad+/MXI/8o4Jp2sgfakBTUFBLjKnR2viSUNAA
        IUZNCFEIm6gh1LdoQUkM8Q9CWwztYmna3jsz926R3Xb3+Ht2nzlsZ2f33nPuvPyeZz6f5JPtpntnfs9z
        5vvdc86elyUAAAAAAAAAAAAAAAAIhZOTtWuLY4dfvZ0ur22tm4Onjq9eP11ausr9bwAIienRA9eUmbml
        SM294klx2uAZ8bN5Gr+zSMz3uB8FAF+ZTm66WkL9bvHrLuR79VyemhP5RrzsDgUAPlFm0Q8UmXmwIdzz
        eLZMzR/aexDusACgnSKJbpfw2rv0TaFexM/b5wnc4QFAK0US39EQ4DZ8YDNbvcGdBgC00WH4Kx+iBAAU
        0kP4KykBAE30GP5KSgBAAwOEv5ISABiSAcNfSQkADIGC8FdSAgB9oij8lZQAQB8oDH8lJQDQJYrDX0kJ
        AHSBB+GvpAQA2sSj8FdSAgBt4GH4KykBgP3gcfgrKQGARQgg/JWUAMA8BBT+SkoAYC8EGP5KSgDgSgQc
        /kpKAKCJEYS/khIAuJgRhb+SEgCwjDD8lZQAjJsRh7+SEoBxUk7WXioBeLwWiDFKCcA42dxYuUkCQAlQ
        AjBWKIGZlACME0pg5kOb6yuvdNsCMB4ogZmUAIwTSmAmJQDjhBKYSQnAOKEEZlICME4ogZmUAIwTSmAm
        JQDjhBKYSQmAbs6/tj+Lf9r9tjUogZmUAOhELs53u4v0DCXQqZQA6EIuyir8lZRAt1ICoAO5GOvhrzwj
        Dwk23B9rDUpgJiUAwyIX4eXCX0kJdCslAMMgF99u4a+kBLqVEoB+kYtur+Gv7KQEttL49XJsSoASgL6Q
        i23e8FdSAt1KCUC3yEW2aPgrKYFupQSgG+Ti2m/4KymBbqUEoF3komor/JWUQLdSAtAOcjG1Hf5KSqBb
        KQHYH3IRdRX+SkqgWykBWAy5eLoOfyUl0K2UAMyHXDR9hb+SEuhWSgD2hlwsfYe/khLoVkoAroxcJEOF
        v7LrEtjJU/PpMol+W359W5GYtxQbK286b2omZWLeV6TRX8t/PyY2zee7lAA0IxfH0OGvPN1FCWwfM9dN
        jxx5nvvtFZneufScMltZyRPzJ0VmTjXM6LOUADwbuSi0hL+ykxJYhAtfYhr/7vmZmmf1UUoALiAXg7bw
        V6opAcuFdx/G/94wp69SAmNHLgKt4a9UVQLT283zizT6cMOcvkoJjBW58bWHv1JVCVjyLL6zYU5fpQTG
        htzovoS/Ul0JFJn5QMOcvkoJjAW5sX0Lf6WuhwOTyXPz1JxomNNXKYHQkRvZ1/BXqiqBU8dXr5eZtmoz
        +iwlECpy4/oe/kpVJSCz3Nowo89SAqEhN2oo4a9UUwL2RUMyz5dr8/kuJRAKcmOGFv7K09vp8ppb5qAU
        aXRbw3y+Swn4jtyIoYbfem5rYl7lljooJydr18o8O7X5QpAS8BW58UIO/7TIzOfcUlUg8/xt45z+Swn4
        htxoYYdfLFPzW265Kgj0YUAlJeALcmMFH35rnkWpW7IKyiQ+3DRnQFIC2pEbaRTht5bHowNu2SrIk0Mv
        bpozMCkBrciNM5rwW7cm5kVu6WqQubbrcwYoJaANuVFGFX6rfSmuW74aZK6iPmegUgJakBvjPbUbZxRO
        l5auclugBplrLAVgpQSGRm6EUYbfal+H77ZBBfbjxmSup+tzBi4lMBSy+aMNv9V+Zp/bChXkyaEbm+Yc
        gZRA38imjzr81jyNf95thwrKNPqJpjlHIiXQF7LZow+/tczMR92WqKBI499vmnNEUgJdI5tM+L/lI25b
        VFCk0X80zDg2KYGukM0l/DXzJD7itmdw3EOA/6vPOEIpgbaRTSX8DZap+aTbIhVQAjMpgbaQzST8l/fs
        zvry69xWqYASmEkJ7BfZRMK/i3Iv4F+0vSiIEphJCSyKbB7h36tJfKvbNjVQAjMpgXmRTSP88/lUuW5W
        3fapgRKY+RVKYI/IZhH+xXxc21uELZTATEpgN2STCP9+TMzD2p4UtFACMymByyGbQ/jbcXNrPTrmtlUN
        lMBMSqCObArhb9dzRRp9cDs9/J1ui1VACcykBCpkMwh/dz5RJuZ9xS0HX+K2e3AogZmUgGwC4e/Hu9yW
        q4ASmDneEpDFE/7+XLgAtjaim4uN5dj9tjUogZnjKwFZNOHv18ULIDU/JD+fUwKdOp4SkMUS/v7dbwHY
        Y1AC3Rp+CcgiCf8wtlEAVkqgW8MtAVkc4R/OtgrASgl0a3glIIsi/MPaZgFYKYFuDacEZDGEf3jbLgAr
        JdCt/peALILw67CLArBSAt3qbwnI8IRfj10VgJUS6Fb/SkCGJvy67LIArJRAt/pTAjIs4ddn1wVgpQS6
        VX8JyJCEX6d9FICVEuhWvSUgwxF+vfZVAFZKoFv1lYAMRfh122cBWPssgSfFLxRJ9Bmr/ZTkPDWP1v5M
        aOopARmG8Ou37wKwdlkC9+aJSa70OQebR1dfWGysvEn+/D1FZh6szRaCw5eADEH4/XCIArB2UgLzYr83
        YTuNfsreO2iY0WeHKwE5OeH3x6EKwKqiBCryLEqlCP63YU5f7b8E5KSE3y+HLACrqhLYmpgXFVn0iYY5
        fbW/EpCTEX7/HLoArKpKYHrn0nOKxNzdMKevdl8CchLC76caCsCqqgQsck/gNxrm9NXuSkDa8h0NJ0Q/
        1FIAVn0lkJo/q83or5l5cGey/DK3tHbYXl/5QTn405ecDH1RUwFYdT0cePuRF8hM/1Wb0V8z87np0QPX
        uOXtD7c5X7nkJOiT2grAqqoE8mTlkMz0TG1Gby1T80duaftDDsbjfv/VWABWVSVQZPGHGmb01Wdsqbml
        LYb72/+x2oHRP7UWgFVNCWxNzKtknmAe6uapOeGWthj21VNNB0bv1FwA1n9wpxscmeXjtdl89lyxsfIa
        t7T5kQP8ee2A6KeqC6DMzC+50w2OfaVg04y+KvcC3uWWNj+BvWRyzKougCcnb3iFO93gPHrMfJvMdKY+
        o8fe55Y2H4+95eZvbzgY+qneAkjMw+5UapC57r9kTn89bd8M5Za2d8rj0YGGg6Gfqi2AfT9R1QEyVzgv
        DBIXemHQdrq81nQw9FLN9wDudqdSQ5HG722c1VO31s1Bt7S9k2/Ey00HQy/V/BzAwrN1RWgvey/Xzapb
        2t45dXz1+qaDoZdqLoD3uFOpoUij2xrm9NdF/ilwOpk8V344pGdDx6ze5wAy8zvuVGrIE/MrTbP6qn1B
        n1vafMgP31c/GHqp2gIoU/Mxdyo1yFx31ef02K+6Zc2PtPOvNhwQ/VPxQ4D4n92p1BDUpwVl5gNuWfNT
        bhx6rRzk3CUHRd/U/BzAzvR283x3OhXITI/UZvTWMjO3uGUthjT03zUdGL1ScwFM82z5R9zpBsf9pdc4
        p2/a70eYTm662i1tMew7teRgZ+sHR69UXQDi77nTDY7MEszb3+1DeLes/SFN8sdNJ0Bv1F4AT5ycrF3r
        TjkY5z8oNDVfqs3mqw+096lAciA54BdqJ0B/1F4AYnSbO+VgnP+2ocbZvPN0mcSH3bLawb6eONCvWBqD
        HhSAOfnE8Td+hztt70yPHHmezPDftZn8NDHvcMtqF/eJKXw+oH/6UADtfY7dAgTzT95JfIdbUjdQAl7q
        RQGIz8hDgR9zp+4NuWcbyblP12bxz8T8ultSt1AC3ulLAViLhd69tiCb2eoNcs6TtRn8s6/wV1ACXulT
        AdhXr/1Pnhy60Y3QGacmKy+X84XwuH+YN1RRAt7oVwGI9kUs9q65G6N1dtLo+23RNJ3bM4d9NyUl4IXe
        FYDzm2Vqftn++7wbpxXyNPoFOfZO7Vw+quOt1JSAen0tgMr77dfTuZEWpkgiI8f6x9qxfVXX5yhQAqr1
        vQCc0T8VWfRW+8m9brxdsS9iu/BR30G9p0Xdh6ichxJQayAF4MzMqSIxf19m5jflb/Wfsa96s4/ptzfM
        95XZykqRxBv2a7/tB47Kn9++5Of9Vmf4KygBlYZVAONVd/grKAF1UgD+60f4KygBVVIAfutX+CsoATVS
        AP7qZ/grKAEVUgB+6nf4KyiBwaUA/DOM8FdQAoNKAfhlWOGvoAQGkwLwxzDDX0EJDCIF4Idhh7+CEuhd
        CkC/4wh/BSXQqxSAbscV/gpKoDcpAL2OM/wVlEAvUgA6HXf4KyiBzqUA9En4L4YS6MynyiT6WbfNc0MB
        dCLhb4ISaNWni8TcvX3MXOe2dyHsh2/Isf5A9P9js3VI+K8EJdCKX9xK49e7LW2FnfXl15Wp+deGc+He
        Jfx7gRJY3DyN/2L69iMvcFvZKvarpsvMfLTpvLirhH8eKIH5tV+tNV1ausptYWfYj9tqOj9eVsK/CJvr
        K6+UzaME9mT8kT7CXyHnvOvSGbBBwr8fKIHdzbPo3+y327ot6wVbNmUafappHpxJ+NuAEriiO3m2/N1u
        q3qlnKy9VM7/9do8eEHC3yaUQLP2a63dFg1Cnpq3Nc01cgl/F1ACl/g1+8y8255BsA8FZI4v1uYas4S/
        SyiBZ/lrblsGpczin2uYbYwS/j6gBM779E5683e5LRkU+7oDmaeszTc2CX+fjL4EkugzbitUYF+A1Djn
        OCT8QzDuEojf67ZBBUUS39o8Z/AS/iEZbwnEb3ZboAL73oPmOYOW8GtgjCUw1L/9Xw73PMDZ+pwBS/g1
        MbYSsN9775auBplrqz5noBJ+jYyoBM65JauiSMzDDbOGJuHXzFhKwC1XFXlqHm2aNSAJvw+MogRuOfgS
        t1w1yFxPXTJnOBJ+nwi9BPJk5ZBbqgpOTVZe3jRnIBJ+Hwm5BOzLb90yVVAkyz/eNGcAEn6fCbYEsvhD
        bokqkMf/72+c028JfwgEWgKP9PkJQLtRJPF/Nszos4Q/JEIsga316Ifd8gZlOz38vU3zeSzhD5HgSiCL
        PuGWNih5Fv1p43x+SvhDJrASONv25//Py5OTN7xC5vhGbS5fJfxjILASuM8taxCKxPxlw0w+SvjHRGAl
        8ItuWb2Sp/G6nPtcbRYfJfxjJKAS+Ea+ES+7ZfVCeTw6IOfdrM3ho4R/zARUAo/bULpldcrOZPllRWYe
        bJjBNwk/BFUCX+v6ScE8OXSjnOdLtfP6KOGHbxFQCeR5FqVuWa2SZ+ZH5fiP1c7no4QfLiWsJwbjj2wf
        M9e5pe0L+Vv/xWUa3SPHDeETfwg/XJ6wSkDuDaTm/YsWwebR1RcWSXyHHCeEv/WthB92J7ASsH5T/Bv7
        DsLNbPUGt8xGzr+tN4veKn/+r4rMnLroGL5L+GHvBFgCF/uEeL/cOzghv35cfv20/YZh+e9Qv+iT8MP8
        BF4CY5Hww+JQAl5L+GH/UAJeSvihPSgBryT80D6UgBcSfugOSkC1hB+6hxJQKeGH/qAEVEn4oX8oARUS
        fhgOSmBQCT8MDyUwiIQf9EAJ9CrhB31QAr1I+EEvlECnEn7QDyXQiYQf/IESaFXCD/5BCbQi4Qd/oQT2
        JeEH/6EEFpLwQzhQAnNJ+CE8KIE9SfghXFwJPFS76PGChB/ChxJolPDDeKAEniXhh/FBCZyX8MN4GXkJ
        EH6AkZYA4QeoGFkJEH6AOiMpAcIPcDkCLwHCD7AbgZYA4QfYK4GVAOEHmJdASoDwAyyK5yVA+AH2i6cl
        QPgB2sKzEiD8AG3jSQkQfoCuUF4ChB+ga5SWAOEH6AtlJUD4AfpGSQkQfoChGLgECD/A0AxUAoQfQAs9
        lwDhB9BGTyVA+AG04krggVpo2/CcSPgBtHPq+Or1EtbPXxTe/XqmSOJb3eEBQDvToweuKdPoHgnv2VqY
        5/XLxcZy7A4LAD6Rb8TLeWpOSJDtXfimgDcqP/NonsbvnE5uutodCgB8pdw49FoJ9bsk3J8VT18c9ov8
        qnhvuRH/pL0H4X4UAEJiurR0lX2eYGvdHNzO4jcWxw6/+uRk7Vr3vwEAAAAAAAAAAAAAAMBzlpb+HwdP
        /BzTtY+JAAAAAElFTkSuQmCC
</value>
  </data>
</root>